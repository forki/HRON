//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Test.ServiceReference3 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://HRONLib.Contracts/2017/04", ConfigurationName="ServiceReference3.IApprovalService")]
    public interface IApprovalService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://HRONLib.Contracts/2017/04/IApprovalService/getApprovalInstances", ReplyAction="http://HRONLib.Contracts/2017/04/IApprovalService/getApprovalInstancesRespons" +
            "e")]
        HRONLib.WFApprovals[] getApprovalInstances(string MailAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://HRONLib.Contracts/2017/04/IApprovalService/getApprovalInstances", ReplyAction="http://HRONLib.Contracts/2017/04/IApprovalService/getApprovalInstancesRespons" +
            "e")]
        System.Threading.Tasks.Task<HRONLib.WFApprovals[]> getApprovalInstancesAsync(string MailAddress);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IApprovalServiceChannel : Test.ServiceReference3.IApprovalService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ApprovalServiceClient : System.ServiceModel.ClientBase<Test.ServiceReference3.IApprovalService>, Test.ServiceReference3.IApprovalService {
        
        public ApprovalServiceClient() {
        }
        
        public ApprovalServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ApprovalServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ApprovalServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ApprovalServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public HRONLib.WFApprovals[] getApprovalInstances(string MailAddress) {
            return base.Channel.getApprovalInstances(MailAddress);
        }
        
        public System.Threading.Tasks.Task<HRONLib.WFApprovals[]> getApprovalInstancesAsync(string MailAddress) {
            return base.Channel.getApprovalInstancesAsync(MailAddress);
        }
    }
}
